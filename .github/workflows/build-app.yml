name: Build WebUI-Server
on:
  workflow_dispatch:
    inputs:
      version:
        description: "version"
        required: true
      webcface:
        description: "webcface version"
        required: true
      tools:
        description: "tools version"
        required: true
      webui:
        description: "webui version"
        required: true
env:
  APP_NAME: "WebCFace WebUI Server.app"
  OPENCV_VER: "4.8.0"
jobs:
  build:
    runs-on: macos-13
    steps:
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - run: git clone -b v${{github.event.inputs.webui}} https://github.com/na-trium-144/webcface-webui.git
    - name: Patch source code
      working-directory: webcface-webui/electron/main
      run: |
        sed '2i\
        process.env.PATH = app.getPath("exe").split("/").slice(0, -1).join("/") + "/../bin:" + process.env.PATH;
        ' index.ts > new_index.ts
        mv new_index.ts index.ts
    - run: npm install --prefer-offline --no-audit --maxsockets 1
      working-directory: webcface-webui
    - run: npm run ebuild
      working-directory: webcface-webui
    - run: mv webcface-webui/release/mac/*.app "$APP_NAME"
    - name: Install webcface
      run: |
        git clone -b "${{env.OPENCV_VER}}" https://github.com/opencv/opencv.git
        git clone -b "v${{github.event.inputs.webcface}}" https://github.com/na-trium-144/webcface.git
        git clone -b "v${{github.event.inputs.tools}}" https://github.com/na-trium-144/webcface-tools.git
        cmake -Bbuild_opencv -DCMAKE_BUILD_TYPE=Release "-DCMAKE_INSTALL_PREFIX=$(pwd)/install" \
          -DOPENCV_FORCE_3RDPARTY_BUILD=ON \
          -DWITH_TIFF=OFF -DWITH_OPENEXR=OFF -DWITH_PROTOBUF=OFF -DWITH_IMGCODEC_HDR=OFF \
          -DWITH_IMGCODEC_SUNRASTER=OFF -DWITH_IMGCODEC_PXM=OFF -DWITH_IMGCODEC_PFM=OFF \
          -DWITH_FLATBUFFERS=OFF -DWITH_OPENCL=OFF \
          -DBUILD_JAVA=OFF -DBUILD_OBJC=OFF \
          opencv
        cmake --build build_opencv -t install
        cmake -Bbuild_webcface -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=$(pwd)/install" "-DCMAKE_INSTALL_PREFIX=$(pwd)/install" webcface
        cmake --build build_webcface -t install
        cmake -Bbuild_tools -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=$(pwd)/install" "-DCMAKE_INSTALL_PREFIX=$(pwd)/install" webcface-tools
        cmake --build build_tools -t install
        mv install/* "$APP_NAME/Contents/"
    - run: zip -r "${APP_NAME}.zip" "$APP_NAME"
    - uses: actions/upload-artifact@v3
      with:
        name: app
        path: "*.zip"
  
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v3
      with:
        name: app
    - name: Create Tag
      uses: EndBug/latest-tag@latest
      with:
        ref: v${{github.event.inputs.version}}
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "*.zip"
        makeLatest: true
        tag: v${{github.event.inputs.version}}
        body: "webcface ${{github.event.inputs.webcface}}, webui ${{github.event.inputs.webui}}, tools ${{github.event.inputs.tools}}, opencv ${{env.OPENCV_VER}}"
  
  cask:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Update formula
        run: |
          file=Casks/webcface-webui-server.rb
          echo "file = $file"
          ver=${{github.event.inputs.version}}
          url="https://github.com/na-trium-144/homebrew-webcface/releases/download/v${{github.event.inputs.version}}/WebCFace.WebUI.Server.app.zip"
          echo "new url = $url"
          sha=$(curl -L $url | sha256sum -b | awk '{print $1}')
          echo "sha256 = $sha"
          echo -e "$(head -1 $file)\n  version \"$ver\"\n  sha256 \"$sha\"\n$(tail +4 $file)" > $file
        shell: bash
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.REPO_SCOPED_TOKEN }}
          commit-message: 'Update packages'
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: update-package
          branch-suffix: timestamp
          delete-branch: true
          title: 'webcface-webui-server update for ${{ github.event.inputs.version }}'
          body: |
            @${{ github.actor }}
            
            webcface-webui-server update for ${{ github.event.inputs.version }}
            