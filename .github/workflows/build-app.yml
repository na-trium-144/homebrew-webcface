name: Build WebUI-Server
on:
  push:
env:
  APP_NAME: "WebCFace WebUI Server.app"
  TAG: "v1.5.2" # todo: あとでかえる
jobs:
  build:
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - run: git clone https://github.com/na-trium-144/webcface-webui.git
    - name: Patch source code
      working-directory: webcface-webui/electron/main
      run: |
        sed '2i\
        process.env.PATH = app.getPath("exe") + "/../bin:" + process.env.PATH;
        ' index.ts > new_index.ts
        mv new_index.ts index.ts
    - run: npm install --prefer-offline --no-audit --maxsockets 1
      working-directory: webcface-webui
    - run: npm run ebuild
      working-directory: webcface-webui
    - run: mv webcface-webui/release/mac/*.app "$APP_NAME"
    - name: Install webcface
      run: |
        git clone -b 4.8.0 https://github.com/opencv/opencv.git
        git clone -b 1.5.2 https://github.com/na-trium-144/webcface.git
        git clone -b 1.3.0 https://github.com/na-trium-144/webcface-tools.git
        cmake -Bbuild_opencv -DCMAKE_BUILD_TYPE=Release "-DCMAKE_INSTALL_PREFIX=$APP_NAME/Contents" opencv
        cmake --build build_opencv -t install
        cmake -Bbuild_webcface -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=$APP_NAME/Contents" "-DCMAKE_INSTALL_PREFIX=$APP_NAME/Contents" webcface
        cmake --build build_webcface -t install
        cmake -Bbuild_tools -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=$APP_NAME/Contents" "-DCMAKE_INSTALL_PREFIX=$APP_NAME/Contents" webcface-tools
        cmake --build build_tools -t install
    - run: zip -r "${APP_NAME}.zip" "$APP_NAME"
    - name: Create Tag
      run: |
        git tag v$TAG
    - uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tags: true
    - name: Release
      uses: docker://antonyurchenko/git-release:v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ALLOW_EMPTY_CHANGELOG: true
      with:
        args: "${APP_NAME}.zip"


